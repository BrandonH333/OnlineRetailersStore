@page "/products/{CustomerId}"
@using OnlineRetailersStore.Data.Models
@using OnlineRetailersStore.Data
@inject NavigationManager nav

@code {
    [Parameter] public string CustomerId { get; set; }
    UserInformation customerInfo;
    bool alertVisible = false;
    string home;
    string account;
    string shoppingCart;
    string orderHistory;
    ProductList productList;
    List<int> quantityList = new List<int>();

    protected override async Task OnInitializedAsync()
    {

        if (!string.IsNullOrEmpty(CustomerId))
        {
            // Query for customer info so we can set the object and pass into data bindings into the blazorise front end component library below
            customerInfo = UserService.GetUserInformationById(CustomerId);
            home = $"home/{CustomerId}";
            account = $"account/{CustomerId}";
            shoppingCart = $"shopping-cart/{CustomerId}";
            orderHistory = $"order-history/{CustomerId}";

            productList = ProductService.GetProductList();
            for(int i = 0; i < productList.size; i++)
            {
                int quant = 0; //New quantity of 0
                quantityList.Add(quant); //Populate quantityList  with 0s
            }
        }
        else
        {
            customerInfo = new UserInformation();
            customerInfo.BankAccount.ExpirationDate = DateTime.Now;
            home = $"/";
            account = $"/";
            shoppingCart = $"/";
            orderHistory = $"/";
        }
    }

    private void Save()
    {
        alertVisible = UserService.SaveUser(customerInfo);
        nav.NavigateTo("account/" + customerInfo.User.Id);
    }

    private void AddQuantity(int index)
    {
        quantityList[index]++;
    }
    private void RemoveQuantity(int index)
    {
        if (quantityList[index] == 0) return;
        quantityList[index]--;
    }
}

<Bar Breakpoint="Breakpoint.Desktop" Background="Background.Light">
    <BarMenu>
        <BarStart>
            <BarItem>
                <BarLink To=@home>Home</BarLink>
            </BarItem>

            <BarItem>
                <BarLink To=@account>Account</BarLink>
            </BarItem>
            <BarItem Style="background-color:darkgrey">
                <BarLink>Product</BarLink>
            </BarItem>

            <BarItem>
                <BarLink To=@shoppingCart>Shopping Cart</BarLink>
            </BarItem>
            <BarItem>
                <BarLink To=@orderHistory>Order History</BarLink>
            </BarItem>
        </BarStart>
    </BarMenu>
</Bar>



    @if (!string.IsNullOrEmpty(CustomerId))
    {
<h2 class="center-header"><Alert Color="Color.Primary" Visible="true" Style="overflow-wrap">
    Products
</Alert></h2> }
else
{
<h2 class="center-header">Create Account</h2>
}


    <Row>
        <Column ColumnSize="ColumnSize.Is12">
        </Column>
    </Row>
    <div class="product-wrap">
        <Row>

            @for (int size = 0; size < productList.size; size++)
            {
                var localSize = size;
                bool inStock = (Int32.Parse(productList.list[localSize].amount) > 0);
                <Column ColumnSize="ColumnSize.Is3">
                    <Card>
                        <CardImage Source=@productList.list[localSize].imageSrc Alt="Placeholder image" Style="max-height:275px">
                        </CardImage>

                        <CardBody>
                            <CardTitle Size="5" Weight="TextWeight.Bold">@productList.list[localSize].Name</CardTitle>
                            @if (Int32.Parse(productList.list[localSize].amount) > 0)
                            {
                                <Row Gutter="(32,16)">
                                    <Column ColumnSize="ColumnSize.Is6">
                                        <CardText Style="color: green"> In stock </CardText>
                                    </Column>
                                    <Column ColumnSize="ColumnSize.Is6">
                                        <CardText Style="font-size:16px"> Quantity: @productList.list[localSize].amount</CardText>

                                    </Column></Row>
                    
                }
                            @if (Int32.Parse(productList.list[localSize].amount) <= 0)
                            {
                                <Column ColumnSize="ColumnSize.Is8">
                                    <CardText Style="color: red">Out of stock </CardText>
                                </Column><Column ColumnSize="ColumnSize.Is4">
                                    <CardText> Quantity: @productList.list[localSize].amount</CardText>
                                </Column>


                            }
                            <CardText Style="font-size:small">
                                @productList.list[localSize].Description
                            </CardText>

                            <Button Color="Color.Secondary" Clicked="() => AddQuantity(localSize)">+</Button>
                            <text style="background-color:whitesmoke;display:inline-table">@quantityList[localSize]</text>
                            <Button Color="Color.Secondary" Clicked="() => RemoveQuantity(localSize)">-</Button>
                            <Button Color="Color.Primary" style="float: right" Disabled="!inStock">Buy</Button>



                            </CardBody>
                            </Card>
                            </Column>

                        }

        </Row>
        
    </div>